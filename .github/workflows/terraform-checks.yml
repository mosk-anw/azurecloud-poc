name: Terraform Checks

on:
  pull_request:
    branches:
      - main

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  terraform_checks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0  # Fixed version to avoid compatibility issues

    - name: 🔧 Setup Backend Configuration
      run: |
        echo "Setting up backend configuration for development environment"
        cp configs/backend-development.tf backend.tf
        echo "Backend configuration:"
        cat backend.tf

    - name: 🏗️ Terraform Init
      id: init
      run: |
        echo "Initializing Terraform with backend configuration..."
        terraform init -backend=false  # Skip backend for validation
      continue-on-error: true

    - name: ✅ Terraform Validate
      id: validate  
      run: |
        echo "Validating Terraform configuration..."
        terraform validate -no-color
      continue-on-error: true

    - name: 🎨 Terraform Format Check
      id: fmt
      run: |
        echo "Checking Terraform formatting..."
        terraform fmt -check=true -diff
      continue-on-error: true

    - name: 📊 Comment PR with Results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const output = `## 🧪 Terraform Validation Results
          
          ### 🏗️ Terraform Init
          \`\`\`
          ${{ steps.init.outcome == 'success' ? '✅ SUCCESS' : '❌ FAILED' }}
          \`\`\`

          ### ✅ Terraform Validate  
          \`\`\`
          ${{ steps.validate.outcome == 'success' ? '✅ SUCCESS' : '❌ FAILED' }}
          \`\`\`

          ### 🎨 Terraform Format
          \`\`\`
          ${{ steps.fmt.outcome == 'success' ? '✅ SUCCESS' : '❌ FAILED' }}
          \`\`\`

          ${{ steps.init.outcome == 'success' && steps.validate.outcome == 'success' && steps.fmt.outcome == 'success' ? '🎉 **All checks passed!** Ready for deployment.' : '⚠️ **Some checks failed.** Please review and fix before merging.' }}
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });
