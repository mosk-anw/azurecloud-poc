name: Terraform CD - Environment Deployments

on:
  push:
    branches: [develop, staging, main]
    paths: ['live_terraform_project/**']
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stg
          - prod

env:
  TF_VERSION: 1.9.7
  WORKING_DIR: live_terraform_project

jobs:
  deploy:
    name: Deploy to ${{ matrix.environment }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - environment: dev
            branch: develop
            tfvars_file: environments/development.tfvars
            backend_config: backends/development.hcl
            approval_required: false
          - environment: stg
            branch: staging
            tfvars_file: environments/staging.tfvars
            backend_config: backends/staging.hcl
            approval_required: true
          - environment: prod
            branch: main
            tfvars_file: environments/production.tfvars
            backend_config: backends/production.hcl
            approval_required: true
    
    # Only run if the push is to the matching branch OR manual dispatch
    if: |
      (github.event_name == 'push' && github.ref_name == matrix.branch) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == matrix.environment)
    
    environment: 
      name: ${{ matrix.environment }}
      url: https://portal.azure.com
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Configure Terraform Backend
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          echo "ðŸ”§ Configuring backend for ${{ matrix.environment }} environment"
          terraform init -backend-config=${{ matrix.backend_config }}

      - name: Terraform Plan
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          echo "ðŸ“‹ Planning deployment for ${{ matrix.environment }}"
          terraform plan \
            -var-file=${{ matrix.tfvars_file }} \
            -out=tfplan-${{ matrix.environment }} \
            -detailed-exitcode
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Manual Approval for ${{ matrix.environment }}
        if: matrix.approval_required
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: mosk-anw
          minimum-approvals: 1
          issue-title: "ðŸš€ Deploy to ${{ matrix.environment }} Environment"
          issue-body: |
            **Environment**: ${{ matrix.environment }}
            **Branch**: ${{ github.ref_name }}
            **Commit**: ${{ github.sha }}
            
            Please review the Terraform plan and approve deployment to **${{ matrix.environment }}**.
            
            ### Deployment Details
            - Environment: ${{ matrix.environment }}
            - Variables: ${{ matrix.tfvars_file }}
            - Backend: ${{ matrix.backend_config }}
            
            ### Safety Checks
            - [ ] Terraform plan reviewed
            - [ ] Environment-specific variables verified
            - [ ] Deployment window approved
            
            **Approve this issue to proceed with deployment.**

      - name: Terraform Apply
        working-directory: ${{ env.WORKING_DIR }}
        if: success()
        run: |
          echo "ðŸš€ Applying infrastructure to ${{ matrix.environment }}"
          terraform apply -auto-approve tfplan-${{ matrix.environment }}
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Deployment Summary
        if: always()
        run: |
          echo "## ðŸŽ¯ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ matrix.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Variables Used**: ${{ matrix.tfvars_file }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend Config**: ${{ matrix.backend_config }}" >> $GITHUB_STEP_SUMMARY
